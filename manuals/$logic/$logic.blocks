# Blocks
## Message Block
Can be written to with [stat]printflush [coral]Building[][].
Cannot be read from.
Acts like a 5.0 message block otherwise.

## Switch
Toggles output when clicked.
Read with [stat]sensor[] on [coral]@enabled[].
Cannot be written to with [stat]control[].

## Micro Processor
This block runs the logic assembly code.
It has connection [coral]Building[]s which are in const variables [ammo]@<index>[],
 this variable is shown when selecting the processor.
It can connect to any block in a 10 tile radius.
With regards to instructions:
	- Holds 2000 instructions. (temporary)
	- Runs 2 instructions every tick.

## Logic Processor
Like a [royal]Micro Processor[], with some modifications:
	- Range is doubled to 20 tiles.
	- 8 instructions are ran per tick, 4x faster.
	- 2x2 instead of a 1x1

## Hyper Processor
Above except:
	- Range is 43 blocks
	- 25 instructions per tick, 12.5x faster than a micro processor.
	- Requires cryofluid to process instructions
	- 3x3 instead of 2x2
This outranges a ripple, use them as radars.

## Display
An 80x80 canvas that [stat]drawflush[] instructions render on.
It can handle polygons with up to 25 sides.
The framebuffer only needs to be drawn to once for static images.

## Large Display
Like the [royal]Display[] but 6x6 and with a 176x176 canvas size.
You cannot draw more detailed polygons with it.

## Memory Cell
Has 64 [coral]double[]s of memory.
Use the [stat]read[]/[stat]write[] instructions on it.
Memory can be shared between processors.

## Memory Bank
Like a [royal]Memory Cell[] but with 512 [coral]double[]s of memory.
It's 2x2, so it is twice as space-efficient.
